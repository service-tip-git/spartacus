// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus Cart schematics: ng-add Cart Base feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { CartBaseModule } from "@spartacus/cart/base";
import { cartBaseTranslationChunksConfig, cartBaseTranslationsEn } from "@spartacus/cart/base/assets";
import { AddToCartModule } from "@spartacus/cart/base/components/add-to-cart";
import { MiniCartModule } from "@spartacus/cart/base/components/mini-cart";
import { CartBaseRootModule } from "@spartacus/cart/base/root";
import { I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    CartBaseRootModule,
    CartBaseModule,
    MiniCartModule,
    AddToCartModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: cartBaseTranslationsEn },
      chunks: cartBaseTranslationChunksConfig,
    },
  })]
})
export class CartBaseFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { cartBaseTranslationChunksConfig, cartBaseTranslationsEn } from "@spartacus/cart/base/assets";
import { ADD_TO_CART_FEATURE, CART_BASE_FEATURE, CartBaseRootModule, MINI_CART_FEATURE } from "@spartacus/cart/base/root";
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    CartBaseRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_BASE_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base').then((m) => m.CartBaseModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [MINI_CART_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base/components/mini-cart').then((m) => m.MiniCartModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [ADD_TO_CART_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base/components/add-to-cart').then((m) => m.AddToCartModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: cartBaseTranslationsEn },
      chunks: cartBaseTranslationChunksConfig,
    },
  })
  ]
})
export class CartBaseFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/cart";
@import "@spartacus/styles/vendor/bootstrap/scss/functions";
@import "@spartacus/styles/vendor/bootstrap/scss/variables";
@import "@spartacus/styles/vendor/bootstrap/scss/_mixins";
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { ImportExportModule } from "@spartacus/cart/import-export";
import { importExportTranslationChunksConfig, importExportTranslationsEn } from "@spartacus/cart/import-export/assets";
import { ImportExportRootModule } from "@spartacus/cart/import-export/root";
import { I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    ImportExportRootModule,
    ImportExportModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: importExportTranslationsEn },
      chunks: importExportTranslationChunksConfig,
    },
  })]
})
export class CartImportExportFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { importExportTranslationChunksConfig, importExportTranslationsEn } from "@spartacus/cart/import-export/assets";
import { CART_IMPORT_EXPORT_FEATURE, ImportExportRootModule } from "@spartacus/cart/import-export/root";
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    ImportExportRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_IMPORT_EXPORT_FEATURE]: {
        module: () =>
          import('@spartacus/cart/import-export').then((m) => m.ImportExportModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: importExportTranslationsEn },
      chunks: importExportTranslationChunksConfig,
    },
  })
  ]
})
export class CartImportExportFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/cart";
@import "@spartacus/styles/vendor/bootstrap/scss/functions";
@import "@spartacus/styles/vendor/bootstrap/scss/variables";
@import "@spartacus/styles/vendor/bootstrap/scss/_mixins";
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { QuickOrderModule } from "@spartacus/cart/quick-order";
import { quickOrderTranslationChunksConfig, quickOrderTranslationsEn } from "@spartacus/cart/quick-order/assets";
import { QuickOrderRootModule } from "@spartacus/cart/quick-order/root";
import { I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    QuickOrderRootModule,
    QuickOrderModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: quickOrderTranslationsEn },
      chunks: quickOrderTranslationChunksConfig,
    },
  })]
})
export class CartQuickOrderFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { quickOrderTranslationChunksConfig, quickOrderTranslationsEn } from "@spartacus/cart/quick-order/assets";
import { CART_QUICK_ORDER_FEATURE, QuickOrderRootModule } from "@spartacus/cart/quick-order/root";
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    QuickOrderRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_QUICK_ORDER_FEATURE]: {
        module: () =>
          import('@spartacus/cart/quick-order').then((m) => m.QuickOrderModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: quickOrderTranslationsEn },
      chunks: quickOrderTranslationChunksConfig,
    },
  })
  ]
})
export class CartQuickOrderFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/cart";
@import "@spartacus/styles/vendor/bootstrap/scss/functions";
@import "@spartacus/styles/vendor/bootstrap/scss/variables";
@import "@spartacus/styles/vendor/bootstrap/scss/_mixins";
"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { SavedCartModule } from "@spartacus/cart/saved-cart";
import { savedCartTranslationChunksConfig, savedCartTranslationsEn } from "@spartacus/cart/saved-cart/assets";
import { SavedCartRootModule } from "@spartacus/cart/saved-cart/root";
import { I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    SavedCartRootModule,
    SavedCartModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: savedCartTranslationsEn },
      chunks: savedCartTranslationChunksConfig,
    },
  })]
})
export class CartSavedCartFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { savedCartTranslationChunksConfig, savedCartTranslationsEn } from "@spartacus/cart/saved-cart/assets";
import { CART_SAVED_CART_FEATURE, SavedCartRootModule } from "@spartacus/cart/saved-cart/root";
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    SavedCartRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_SAVED_CART_FEATURE]: {
        module: () =>
          import('@spartacus/cart/saved-cart').then((m) => m.SavedCartModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: savedCartTranslationsEn },
      chunks: savedCartTranslationChunksConfig,
    },
  })
  ]
})
export class CartSavedCartFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/cart";
@import "@spartacus/styles/vendor/bootstrap/scss/functions";
@import "@spartacus/styles/vendor/bootstrap/scss/variables";
@import "@spartacus/styles/vendor/bootstrap/scss/_mixins";
"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { WishListModule } from "@spartacus/cart/wish-list";
import { wishListTranslationChunksConfig, wishListTranslationsEn } from "@spartacus/cart/wish-list/assets";
import { AddToWishListModule } from "@spartacus/cart/wish-list/components/add-to-wishlist";
import { WishListRootModule } from "@spartacus/cart/wish-list/root";
import { I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    WishListRootModule,
    WishListModule,
    AddToWishListModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: wishListTranslationsEn },
      chunks: wishListTranslationChunksConfig,
    },
  })]
})
export class WishListFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { wishListTranslationChunksConfig, wishListTranslationsEn } from "@spartacus/cart/wish-list/assets";
import { ADD_TO_WISHLIST_FEATURE, CART_WISH_LIST_FEATURE, WishListRootModule } from "@spartacus/cart/wish-list/root";
import { CmsConfig, I18nConfig, provideConfig } from "@spartacus/core";

@NgModule({
  declarations: [],
  imports: [
    WishListRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_WISH_LIST_FEATURE]: {
        module: () =>
          import('@spartacus/cart/wish-list').then((m) => m.WishListModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [ADD_TO_WISHLIST_FEATURE]: {
        module: () =>
          import('@spartacus/cart/wish-list/components/add-to-wishlist').then((m) => m.AddToWishListModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: { en: wishListTranslationsEn },
      chunks: wishListTranslationChunksConfig,
    },
  })
  ]
})
export class WishListFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup styling should create a proper scss file 1`] = `
"@import "../../styles-config";
@import "@spartacus/cart";
@import "@spartacus/styles/vendor/bootstrap/scss/functions";
@import "@spartacus/styles/vendor/bootstrap/scss/variables";
@import "@spartacus/styles/vendor/bootstrap/scss/_mixins";
"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup styling should update angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "standalone": false
        },
        "@schematics/angular:directive": {
          "standalone": false
        },
        "@schematics/angular:pipe": {
          "standalone": false
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "3.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "schematics-test:build:production"
            },
            "development": {
              "buildTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss",
              "src/styles/spartacus/cart.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;
